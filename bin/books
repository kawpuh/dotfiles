#!/bin/env bb
(require '[clojure.java.shell :refer [sh]])

(defn rofi-select-and-exec [tasks]
  (let [tasks (map (fn [task] (update task :name #(str % "\n"))) tasks)
        names (->> tasks (map :name) (apply str))
        task (:out (sh "rofi" "-dmenu" :in names))
        command (:command (first (filter #(= task (:name %)) tasks)))]
    (apply sh command)))

(def tasks
  [{:name "Category Theory for Programmers"
    :command '("zathura" "~/papers-textbooks/papers-textbooks/category-theory-for-programmers.pdf")}
   {:name "Applied Category Theory"
    :command '("zathura" "~/papers-textbooks/papers-textbooks/7sketches-applied-category-theory.pdf")}
   {:name "Deep Learning"
    :command '("zathura" "~/papers-textbooks/deep-learning.pdf")}
   {:name "Geometric Methods of Mathematical Physics"
    :command '("zathura" "~/papers-textbooks/geometrical-methods-of-mathematical-physics.pdf")}
   {:name "Dream Machine"
    :command '("zathura" "~/papers-textbooks/the-dream-machine.pdf")}])

(rofi-select-and-exec tasks)
